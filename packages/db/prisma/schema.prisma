generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int               @id @default(autoincrement())
  email                String?           @unique
  name                 String?
  number               String            @unique
  password             String
  RampTransaction      RampTransaction[]
  Balance              Balance?
  netbankingLoginToken String?
  sentTransfers        p2pTransfer[]     @relation(name: "FromUserRelation")
  receivedTransfers    p2pTransfer[]     @relation(name: "ToUserRelation")
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model RampTransaction {
  id        Int        @id @default(autoincrement())
  status    RampStatus
  type      RampType
  token     String     @unique
  provider  String?
  paymentId String?    @unique
  amount    Int
  startTime DateTime
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
}

enum RampType {
  ON_RAMP
  OFF_RAMP
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum RampStatus {
  Success
  Failure
  Processing
  Initiated
}

model p2pTransfer {
  id         Int      @id @default(autoincrement())
  amount     Int
  timestamp  DateTime
  fromUserId Int
  fromUser   User     @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId   Int
  toUser     User     @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}
